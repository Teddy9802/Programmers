# 문제 설명
두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, 
solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 
그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 
3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 
[3, 12]를 반환해야 합니다.

# 제한조건
두 수는 1이상 1000000이하의 자연수입니다.

# 입출력 예
n	m	return
3	12	[3, 12]
2	5	[1, 10]


# 풀이
function solution(n, m) {
    // 최대공약수 : 두개 이상의 수가 공통으로 가지는 약수 중에서 가장 큰 수
    // 최소공배수 : 두개 이상의 수가 공통으로 가지는 배수 중에서 가장 작은 수
    
    // 최대공약수 구하기
    let max = 0; //공약수 중에서 제일 큰 값
    for(let i = 1; i <= m; i ++){
        if(n % i === 0 && m % i === 0){
            max = i;
        }
    }
    
    // 최소공배수 구하기
    let min = 0; // 공배수중에서 제일 작은 값
    for (let i = m; i <= n * m; i += m){
        if(i % n === 0){
            min = i;
            break;
        }
    }
    return [ max, min]
}

# 고수의 풀이
function gcdlcm(a, b) {
    var r;
    for(var ab= a*b;r = a % b;a = b, b = r){}
    return [b, ab/b];
}

