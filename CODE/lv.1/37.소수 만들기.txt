# 문제 설명
주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 
숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 
다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를
완성해주세요.


# 제한조건

시험은 최대 10,000 문제로 구성되어있습니다.
문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.

# 입출력 예
nums	    result
[1,2,3,4]	1
[1,2,7,6,4]	4


# 풀이
function solution(nums) {
    let answer = 0;
    
    for ( let i = 0; i < nums.length; i++){
        for ( let j = i + 1; j < nums.length; j++){
            for(let k = j + 1; k <nums.length; k++){
                const sum = nums[i] + nums[j] + nums[k];
                
                let count = 0;
                for ( let o = 1; o <= sum; o ++){
                    if( sum % o === 0 ){
                        count++
                        
                        if(count > 2){
                            break
                        }
                    }
                }
                if( count === 2){
                    answer++;
                }
            }
        }
    }
    return answer
}

# 고수의 풀이
function primecheck(n){
    for(var i=2;i<=Math.sqrt(n);i++){
        if(n%i == 0){
            return false;
        }
    }
    return true;    
}
function solution(nums){
    var cnt = 0;
    for(var i=0;i<nums.length-2;i++){
        for(var j=i+1;j<nums.length-1;j++){
            for(var w=j+1;w<nums.length;w++){
                    //console.log(nums[i]+"/"+nums[j]+"/"+nums[w]);

                    if(primecheck(nums[i]+nums[j]+nums[w])){
                        //console.log(nums[i]+nums[j]+nums[w]);
                        cnt++;
                    }
            }
        }
    }
    return cnt;
}




